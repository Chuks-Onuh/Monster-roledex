{"version":3,"sources":["components/card/card.jsx","components/card-list/card-list.jsx","components/search-box/search-box.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","monster","name","CardList","monsters","map","id","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","bind","fetch","then","response","json","users","setState","e","this","target","value","filterMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAIaA,EAAO,SAACC,GAAD,OAChB,qBAAKC,UAAU,iBAAf,SACI,6BAAKD,EAAME,QAAQC,UCFdC,G,MAAW,SAAAJ,GACpB,OACI,qBAAKC,UAAU,YAAf,SACGD,EAAMK,SAASC,KAAI,SAAAJ,GAAO,OACvB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQK,WCJpBC,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBACIT,UAAU,SACVU,KAAK,SACLF,YAAaA,EACbG,SAAWF,MCoCJG,E,kDAvCb,aAAc,IAAD,8BACX,gBAEKC,MAAQ,CACXT,SAAU,GACVU,YAAa,IAGf,EAAKL,aAAe,EAAKA,aAAaM,KAAlB,gBART,E,qDAWb,WAAqB,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAACjB,SAAUgB,S,0BAG3C,SAAaE,GACXC,KAAKF,SAAS,CAACP,YAAaQ,EAAEE,OAAOC,U,oBAGvC,WAAU,IAAD,EAC2BF,KAAKV,MAA/BT,EADD,EACCA,SAAUU,EADX,EACWA,YACZY,EAAiBtB,EAASuB,QAAO,SAAA1B,GAAO,OAC5CA,EAAQC,KAAK0B,cAAcC,SAASf,EAAYc,kBAElD,OACE,sBAAK5B,UAAY,MAAjB,UACE,oDACA,cAAC,EAAD,CACEQ,YAAY,kBACZC,aAAcc,KAAKd,eAErB,cAAC,EAAD,CAAUL,SAAUsB,W,GAlCVI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a141d605.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.css';\r\n\r\n\r\nexport const Card = (props) => (\r\n    <div className='card-container'>\r\n        <h3>{props.monster.name}</h3>\r\n    </div>\r\n)\r\n\r\n","import React from 'react';\r\nimport { Card } from '../card/card';\r\nimport './card-list.css';\r\n\r\nexport const CardList = props => {\r\n    return(\r\n        <div className='card-list'>\r\n          {props.monsters.map(monster => (\r\n              <Card key={monster.id} monster={monster} />\r\n          ))}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './search-box.css';\r\n\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => (\r\n    <input \r\n        className='search'\r\n        type='Search' \r\n        placeholder={placeholder} \r\n        onChange={ handleChange }\r\n    />\r\n)","import './App.css';\nimport { Component } from 'react';\nimport { CardList } from './components/card-list/card-list';\nimport { SearchBox } from './components/search-box/search-box.jsx';\n\nclass App extends Component{\n  constructor(){\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: \"\"\n    }; \n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n     fetch('https://jsonplaceholder.typicode.com/users')\n     .then(response => response.json())\n     .then(users => this.setState({monsters: users}))\n  }\n\n  handleChange(e){\n    this.setState({searchField: e.target.value})\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filterMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n      );\n    return ( \n      <div className = 'App'>  \n        <h1> Monsters Roledex </h1>\n        <SearchBox\n          placeholder='Search monsters'\n          handleChange={this.handleChange}\n        />\n        <CardList monsters={filterMonsters}/ >\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}